(undo-tree-save-format-version . 1)
"242c31687d2a9f7b68b1339056bc3a39862f3a99"
[nil nil nil nil (25173 40770 28194 574000) 0 nil]
([nil nil ((1052 . 1055) (1051 . 1052) (t 25168 10756 408733 122000) 1008) nil (25173 40770 28192 901000) 0 nil])
([nil nil ((1055 . 1061)) nil (25173 40770 28190 767000) 0 nil])
([nil nil ((1674 . 1678) 1060) nil (25173 40770 28189 685000) 0 nil])
([nil nil ((1678 . 1681)) nil (25173 40770 28188 122000) 0 nil])
([nil nil ((1681 . 1682) 1680) nil (25173 40770 28187 130000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1806 . 1807) (nil fontified nil 1682 . 1807) (1682 . 1807)) nil (25173 40770 28185 808000) 0 nil])
([nil nil ((1807 . 1812)) nil (25173 40770 28183 884000) 0 nil])
([nil nil ((#("unfortunatly" 0 6 (fontified nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 6 7 (rear-nonsticky t fontified nil wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent))) 7 12 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified nil)) . 1813) (undo-tree-id9 . -6) (undo-tree-id10 . -12) (undo-tree-id11 . -10) (1800 . 1813) 1812) nil (25173 40770 28182 111000) 0 nil])
([nil nil ((1954 . 1956) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1954) (undo-tree-id0 . -1) (#("r" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1955) (undo-tree-id1 . -1) 1956 (1955 . 1956) (1934 . 1955) (1928 . 1934) (1907 . 1928) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1907) (undo-tree-id2 . -1) 1908 (1898 . 1908) (1879 . 1898) (#("d" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1879) (undo-tree-id3 . -1) (#("e" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1880) (undo-tree-id4 . -1) 1881 (1876 . 1881) (1860 . 1876) (1839 . 1860) (1818 . 1839) (#("a" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1818) (undo-tree-id5 . -1) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1819) (undo-tree-id6 . -1) 1820 (1819 . 1820) (#("o" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1819) (undo-tree-id7 . -1) (#("u" 0 1 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . -1820) (undo-tree-id8 . -1) 1821 (1813 . 1821)) nil (25173 40770 28174 907000) 0 nil])
([nil nil ((1919 . 1927)) nil (25173 40770 28126 637000) 0 nil])
([nil nil ((1927 . 1928)) nil (25173 40770 28124 733000) 0 nil])
([nil nil ((1959 . 1965) (#("after" 0 5 (wrap-prefix #("    " 0 4 (face org-indent)) line-prefix #("    " 0 4 (face org-indent)) fontified t)) . 1959)) nil (25173 40770 28118 251000) 0 nil])
([nil nil ((1988 . 1997) (1967 . 1988) (1966 . 1967) (t 25173 40770 79840 195000) 1964) nil (25173 40867 630118 392000) 0 nil])
([nil nil ((5534 . 5538) 1998 (t 25173 40867 673169 283000)) nil (25191 24465 635471 703000) 0 nil])
([nil nil ((5576 . 5580) (5555 . 5576) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "PHONE" face org-level-1)) . -5555) (undo-tree-id0 . -1) (#("a" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "PHONE" face org-level-1)) . -5556) (undo-tree-id1 . -1) (#("n" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "PHONE" face org-level-1)) . -5557) (undo-tree-id2 . -1) 5558 (#("d" 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "PHONE" face org-level-1)) . -5558) (undo-tree-id3 . -1) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "PHONE" face org-level-1)) . -5559) (undo-tree-id4 . -1) 5560 (5543 . 5560) (nil org-todo-head nil 5542 . 5543) (nil org-todo-head nil 5537 . 5542) (nil org-todo-head nil 5536 . 5537) (nil fontified t 5542 . 5543) (nil line-prefix "" 5542 . 5543) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5542 . 5543) (nil org-todo-head "PHONE" 5542 . 5543) (nil face org-level-1 5542 . 5543) (nil fontified t 5536 . 5542) (nil line-prefix "" 5536 . 5542) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5536 . 5542) (nil org-todo-head "PHONE" 5536 . 5542) (nil face ((:foreground "red" :weight bold) org-level-1) 5536 . 5542) (#(" MEETING " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "PHONE" face org-level-1) 1 8 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "PHONE" face ((:foreground "red" :weight bold) org-level-1)) 8 9 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "PHONE" face org-level-1)) . 5536) (5545 . 5552) (nil org-todo-head nil 5544 . 5545) (nil org-todo-head nil 5537 . 5544) (nil org-todo-head nil 5536 . 5537) (nil fontified t 5544 . 5545) (nil line-prefix "" 5544 . 5545) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5544 . 5545) (nil org-todo-head "PHONE" 5544 . 5545) (nil face org-level-1 5544 . 5545) (nil fontified t 5539 . 5544) (nil line-prefix "" 5539 . 5544) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5539 . 5544) (nil org-todo-head "PHONE" 5539 . 5544) (nil face ((:foreground "red" :weight bold) org-level-1) 5539 . 5544) (nil fontified t 5538 . 5539) (nil line-prefix "" 5538 . 5539) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5538 . 5539) (nil org-todo-head "PHONE" 5538 . 5539) (nil face org-level-1 5538 . 5539) (nil fontified t 5536 . 5538) (nil line-prefix "" 5536 . 5538) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5536 . 5538) (nil org-todo-head "PHONE" 5536 . 5538) (nil face (org-superstar-header-bullet org-level-1) 5536 . 5538) (#(" PHONE " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "PHONE" face org-level-1) 1 6 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "PHONE" face ((:foreground "red" :weight bold) org-level-1)) 6 7 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "PHONE" face org-level-1)) . 5536) (5543 . 5552) (nil org-todo-head nil 5542 . 5543) (nil org-todo-head nil 5537 . 5542) (nil org-todo-head nil 5536 . 5537) (nil org-todo-head "TODO" 5535 . 5536) (nil fontified t 5542 . 5543) (nil line-prefix "" 5542 . 5543) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5542 . 5543) (nil org-todo-head "TODO" 5542 . 5543) (nil face org-level-1 5542 . 5543) (nil fontified t 5536 . 5542) (nil line-prefix "" 5536 . 5542) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5536 . 5542) (nil org-todo-head "TODO" 5536 . 5542) (nil face ((:foreground "forest green" :weight bold) org-level-1) 5536 . 5542) (#(" CANCELLED " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face org-level-1) 1 10 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face ((:foreground "forest green" :weight bold) org-level-1)) 10 11 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face org-level-1)) . 5536) (5547 . 5554) (nil org-todo-head nil 5546 . 5547) (nil org-todo-head nil 5537 . 5546) (nil org-todo-head nil 5536 . 5537) (nil fontified t 5546 . 5547) (nil line-prefix "" 5546 . 5547) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5546 . 5547) (nil org-todo-head "TODO" 5546 . 5547) (nil face org-level-1 5546 . 5547) (nil fontified t 5542 . 5546) (nil line-prefix "" 5542 . 5546) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5542 . 5546) (nil org-todo-head "TODO" 5542 . 5546) (nil face ((:foreground "forest green" :weight bold) org-level-1) 5542 . 5546) (nil fontified t 5541 . 5542) (nil line-prefix "" 5541 . 5542) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5541 . 5542) (nil org-todo-head "TODO" 5541 . 5542) (nil face org-level-1 5541 . 5542) (nil fontified t 5536 . 5541) (nil line-prefix "" 5536 . 5541) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5536 . 5541) (nil org-todo-head "TODO" 5536 . 5541) (nil face (org-superstar-header-bullet org-level-1) 5536 . 5541) (#(" DONE " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face org-level-1) 1 5 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face ((:foreground "forest green" :weight bold) org-level-1)) 5 6 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face org-level-1)) . 5536) (5542 . 5553) (nil org-todo-head nil 5541 . 5542) (nil org-todo-head nil 5537 . 5541) (nil org-todo-head nil 5536 . 5537) (nil fontified t 5541 . 5542) (nil line-prefix "" 5541 . 5542) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5541 . 5542) (nil org-todo-head "TODO" 5541 . 5542) (nil face org-level-1 5541 . 5542) (nil fontified t 5536 . 5541) (nil line-prefix "" 5536 . 5541) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5536 . 5541) (nil org-todo-head "TODO" 5536 . 5541) (nil face ((:foreground "magenta" :weight bold) org-level-1) 5536 . 5541) (#(" In Progress " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face org-level-1) 1 12 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face ((:foreground "magenta" :weight bold) org-level-1)) 12 13 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face org-level-1)) . 5536) (5549 . 5555) (nil org-todo-head nil 5548 . 5549) (nil org-todo-head nil 5537 . 5548) (nil org-todo-head nil 5536 . 5537) (nil fontified t 5548 . 5549) (nil line-prefix "" 5548 . 5549) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5548 . 5549) (nil org-todo-head "TODO" 5548 . 5549) (nil face org-level-1 5548 . 5549) (nil fontified t 5544 . 5548) (nil line-prefix "" 5544 . 5548) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5544 . 5548) (nil org-todo-head "TODO" 5544 . 5548) (nil face ((:foreground "blue" :weight bold) org-level-1) 5544 . 5548) (nil fontified t 5543 . 5544) (nil line-prefix "" 5543 . 5544) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5543 . 5544) (nil org-todo-head "TODO" 5543 . 5544) (nil face org-level-1 5543 . 5544) (nil fontified t 5536 . 5543) (nil line-prefix "" 5536 . 5543) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5536 . 5543) (nil org-todo-head "TODO" 5536 . 5543) (nil face (org-superstar-header-bullet org-level-1) 5536 . 5543) (#(" NEXT " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face org-level-1) 1 5 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face ((:foreground "blue" :weight bold) org-level-1)) 5 6 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face org-level-1)) . 5536) (5542 . 5555) (nil org-todo-head nil 5541 . 5542) (nil org-todo-head nil 5537 . 5541) (nil org-todo-head nil 5536 . 5537) (nil fontified t 5541 . 5542) (nil line-prefix "" 5541 . 5542) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5541 . 5542) (nil org-todo-head "TODO" 5541 . 5542) (nil face org-level-1 5541 . 5542) (nil fontified t 5537 . 5541) (nil line-prefix "" 5537 . 5541) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5537 . 5541) (nil org-todo-head "TODO" 5537 . 5541) (nil face ((:foreground "red" :weight bold) org-level-1) 5537 . 5541) (nil fontified t 5536 . 5537) (nil line-prefix "" 5536 . 5537) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5536 . 5537) (nil org-todo-head "TODO" 5536 . 5537) (nil face org-level-1 5536 . 5537) (#(" TODO " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face org-level-1) 1 5 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face ((:foreground "red" :weight bold) org-level-1)) 5 6 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) org-todo-head "TODO" face org-level-1)) . 5536) (5542 . 5548) (nil org-todo-head nil 5541 . 5542) (nil org-todo-head nil 5537 . 5541) (nil org-todo-head nil 5536 . 5537) (nil org-todo-head nil 5535 . 5536) (nil fontified t 5541 . 5542) (nil line-prefix "" 5541 . 5542) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5541 . 5542) (nil face org-level-1 5541 . 5542) (nil fontified t 5536 . 5541) (nil line-prefix "" 5536 . 5541) (nil wrap-prefix #("* " 0 2 (face org-indent)) 5536 . 5541) (nil face (org-superstar-header-bullet org-level-1) 5536 . 5541) (#(" " 0 1 (fontified t line-prefix "" wrap-prefix #("* " 0 2 (face org-indent)) face org-level-1)) . 5536) (5537 . 5543) (nil fontified t 5536 . 5537) (nil line-prefix #("*" 0 1 (face org-indent)) 5536 . 5537) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 5536 . 5537) (nil face org-level-2 5536 . 5537) (nil fontified t 5535 . 5536) (nil line-prefix #("*" 0 1 (face org-indent)) 5535 . 5536) (nil wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) 5535 . 5536) (nil face (org-superstar-header-bullet org-level-2) 5535 . 5536) (nil composition (1 1 [9675]) 5535 . 5536) (#("** " 0 1 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-hide) 1 2 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face (org-superstar-header-bullet org-level-2) composition (1 1 [9675])) 2 3 (fontified t line-prefix #("*" 0 1 (face org-indent)) wrap-prefix #("*** " 0 1 (face org-indent) 1 4 (face org-indent)) face org-level-2)) . 5535) (5538 . 5540)) nil (25191 24465 635461 84000) 0 nil])
([nil nil ((5580 . 5581) 5579) nil (25191 24465 635390 962000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5599 . 5600) (nil fontified nil 5581 . 5600) (5581 . 5600)) nil (25191 24465 635389 69000) 0 nil])
([nil nil (5599) nil (25191 24465 635386 794000) 0 nil])
([nil nil ((5581 . 5590)) nil (25191 24465 635380 953000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5610) (undo-tree-id28 . -1) (undo-tree-id29 . -1) 5611 (5610 . 5611) (5609 . 5610) (t 25191 24465 681838 161000) 5589) nil (25191 24574 312888 828000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5636 . 5637) (nil fontified nil 5627 . 5637) (nil fontified nil 5626 . 5627) (nil fontified nil 5610 . 5626) (5610 . 5637)) nil (25191 24574 312883 859000) 0 nil])
([nil nil ((5711 . 5718) (5705 . 5711) (#("P" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5705) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 5706 (5701 . 5706) (5700 . 5701) (#("W" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5700) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5701) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5702) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5703) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5704) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 5705 (5703 . 5705) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5703) (undo-tree-id19 . -1) 5704 (5702 . 5704) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5702) (undo-tree-id20 . -1) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5703) (undo-tree-id21 . -1) 5704 (5702 . 5704) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5702) (undo-tree-id22 . -1) (#("n" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5703) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5704) (undo-tree-id25 . -1) 5705 (5702 . 5705) (5695 . 5702) (5674 . 5695) (#("f" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5674) (undo-tree-id26 . -1) (#("r" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5675) (undo-tree-id27 . -1) 5676 (5671 . 5676) (5665 . 5671) (5661 . 5665) (5640 . 5661) (5637 . 5640)) nil (25191 24574 312875 834000) 0 nil])
([nil nil ((5720 . 5737) (5719 . 5720) (5718 . 5719) 5717) nil (25191 24574 312832 913000) 0 nil])
([nil nil ((5737 . 5738) 5736) nil (25191 24574 312829 948000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5782 . 5783) (nil fontified nil 5738 . 5783) (5738 . 5783)) nil (25191 24574 312827 473000) 0 nil])
([nil nil ((#(" " 0 1 (line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("   " 0 2 (face org-indent) 2 3 (face org-indent)) fontified t)) . 5738)) nil (25191 24574 312820 109000) 0 nil])
([nil nil ((5793 . 5795) (#("." 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5793) (undo-tree-id36 . -1) 5794 (5784 . 5794) (5783 . 5784) (5782 . 5783) (t 25191 24574 355166 771000) 5738) nil (25191 24620 497345 209000) 0 nil])
([nil nil ((5696 . 5697)) nil (25191 24620 497341 893000) 0 nil])
([nil nil ((#(" in Wed Apr. 27. 2022." 0 22 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)) org-category "20210830104404-committee")) . 5697) (undo-tree-id35 . 22)) nil (25191 24620 497340 49000) 0 nil])
([nil nil ((5697 . 5698) 5696) nil (25191 24620 497337 795000) 0 nil])
([nil nil ((nil rear-nonsticky nil 5719 . 5720) (nil fontified nil 5698 . 5720) (5698 . 5720)) nil (25191 24620 497335 541000) 0 nil])
([nil current ((5755 . 5756) (5752 . 5755) (5744 . 5752) (5731 . 5744) (#("i" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5731) (undo-tree-id30 . -1) (#("s" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5732) (undo-tree-id31 . -1) (#(" " 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5733) (undo-tree-id32 . -1) 5734 (5730 . 5734) (5727 . 5730) (5722 . 5727) (#("d" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5722) (undo-tree-id33 . -1) (#("e" 0 1 (fontified t line-prefix #("  " 0 2 (face org-indent)) wrap-prefix #("  " 0 2 (face org-indent)))) . -5723) (undo-tree-id34 . -1) 5724 (5716 . 5724) (5712 . 5716) (5698 . 5712)) nil (25191 24620 497327 806000) 0 nil])
nil
