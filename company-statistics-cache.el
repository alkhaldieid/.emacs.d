(setq company-statistics--scores #s(hash-table size 400 test equal rehash-size 1.5 rehash-threshold 0.8125 data ("import" (((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 2) (python-mode . 24) (nil . 32) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 2) ((:keyword "from") . 19) ((:file "/home/alkhaldieid/repos/csa/code/load_digit_keras_ensemble.py") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 6) (inferior-python-mode . 6) ((:keyword "import") . 3) ((:file "/home/alkhaldieid/repos/csa/code/idc_torch_ensemble.py") . 1) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 1) (org-mode . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 11) (snippet-mode . 1)) "print(values, sep, end, file, flush)" (((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1) ((:keyword "import") . 4) (python-mode . 7) (nil . 7) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 4) ((:keyword "self") . 3) ((:file "/home/alkhaldieid/repos/csa/code/idc_torch_ensemble.py") . 1)) "path" (((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1) ((:symbol "os") . 2) ((:keyword "import") . 2) (python-mode . 2) (nil . 2) ((:file "/home/alkhaldieid/repos/csa/code/idc_torch_ensemble.py") . 1)) "sklearn" (((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 3) ((:keyword "from") . 3) (python-mode . 3) (nil . 3)) "datasets" (((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1) ((:symbol "sklearn") . 1) ((:keyword "from") . 2) (python-mode . 2) (nil . 2) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:symbol "keras") . 1)) "preprocessing" (((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1) ((:symbol "sklearn") . 1) ((:keyword "from") . 3) (python-mode . 3) (nil . 3) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2) ((:symbol "keras") . 2)) "normalize(X, norm, axis, copy, return_norm)" (((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "utils" (((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1) ((:symbol "sklearn") . 1) ((:keyword "from") . 2) (python-mode . 3) (nil . 3) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2) ((:symbol "keras") . 2) ((:keyword "if") . 1)) "shuffle(arrays, random_state, n_samples)" (((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "tensorflow" (((:file "/home/alkhaldieid/repos/csa/code/load_digit_keras_ensemble.py") . 2) ((:keyword "from") . 5) (python-mode . 9) (nil . 9) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 2) ((:keyword "import") . 4) ((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 4)) "keras" (((:file "/home/alkhaldieid/repos/csa/code/load_digit_keras_ensemble.py") . 1) ((:keyword "import") . 3) (python-mode . 13) (nil . 14) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 3) ((:keyword "from") . 10) ((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 8) ((:keyword "if") . 1) (inferior-python-mode . 1)) "from" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "models" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1) ((:symbol "keras") . 2) ((:keyword "from") . 2) (python-mode . 2) (nil . 2) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) "Sequential" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "def") . 1)) "layers" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1) ((:symbol "keras") . 2) ((:keyword "from") . 2) (python-mode . 2) (nil . 2) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) "Dense" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "def") . 1)) "GaussianNoise" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "return" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1) ((:keyword "def") . 2) (python-mode . 4) (nil . 4) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 3) ((:keyword "assert") . 1) ((:keyword "not") . 1)) "add(layer)" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1) ((:symbol "model") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "EnsembleVoteClassifier" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 2) ((:keyword "return") . 1) (python-mode . 2) (nil . 2) ((:keyword "class") . 1)) "clf1" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 3) ((:keyword "return") . 1) (python-mode . 3) (nil . 5) ((:keyword "self") . 2) ((:keyword "import") . 2) (inferior-python-mode . 2)) "os.path" (((:keyword "import") . 5) (inferior-python-mode . 5) (nil . 5)) "mlxtend" (((:keyword "from") . 1) (inferior-python-mode . 1) (nil . 1)) "class" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1) ((:keyword "return") . 1) (python-mode . 1) (nil . 1)) "my_ens" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "numpy" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1) ((:keyword "import") . 2) (python-mode . 2) (nil . 2) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) "X_train" (((:keyword "import") . 2) (inferior-python-mode . 2) (nil . 2)) "X_train.shape" (((:keyword "import") . 2) (inferior-python-mode . 2) (nil . 2)) "break" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "X_test" (((:keyword "import") . 1) (inferior-python-mode . 1) (nil . 1)) "predictions" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "self" (((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1) ((:keyword "self") . 1) (python-mode . 1) (nil . 1)) "emacs" ((shell-mode . 1) (nil . 1)) "comment" (((:file "/home/alkhaldieid/.emacs.d/README.org") . 1) (org-mode . 1) (nil . 1)) "modus-vivendi" ((emacs-lisp-mode . 1) (nil . 1)) "~/repos/" (((:file "/data/home/alkhaldieid/repos/shared/.config/shell/aliasrc") . 1) ((:keyword "sh") . 1) (sh-mode . 1) (nil . 2) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 1) (org-mode . 1)) "~/repos/csa/" (((:file "/data/home/alkhaldieid/repos/shared/.config/shell/aliasrc") . 1) ((:keyword "sh") . 1) (sh-mode . 1) (nil . 2) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 1) (org-mode . 1)) "wrappers" (((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1) ((:symbol "keras") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "scikit_learn" (((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1) ((:symbol "wrappers") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "KerasClassifier" (((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "defun" ((lisp-interaction-mode . 1) (nil . 1)) "interactive" (((:keyword "defun") . 1) (lisp-interaction-mode . 1) (nil . 1)) "~/repos/csa/code/" (((:file "/data/home/alkhaldieid/repos/shared/.config/shell/aliasrc") . 1) ((:keyword "sh") . 1) (sh-mode . 1) (nil . 2) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 1) (org-mode . 1)) "ensemble" (((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 2) (org-mode . 2) (nil . 2)) "bookmark" ((emacs-lisp-mode . 1) (nil . 1)) "bookmark-jump" ((emacs-lisp-mode . 1) (nil . 1)) "votingclassifier" (((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 2) (org-mode . 2) (nil . 2)) "mnist" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:symbol "datasets") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "load_data(path)" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2) ((:keyword "import") . 2) (python-mode . 2) (nil . 2)) "raw_data" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 8) (inferior-python-mode . 6) ((:keyword "as") . 1)) "input(prompt)" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 5) ((:keyword "as") . 4) (python-mode . 5) (nil . 5) ((:symbol "nil") . 2) ((:keyword "if") . 1)) "raw_data.count" ((inferior-python-mode . 1) (nil . 1)) "assert" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "assert_data()" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "applications" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:symbol "keras") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "resnet" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:symbol "applications") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "ResNet50(args, kwargs)" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 3) ((:keyword "import") . 1) (python-mode . 3) (nil . 3) ((:keyword "if") . 2)) "x_train.shape" ((inferior-python-mode . 1) (nil . 1)) "cifar10" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:symbol "datasets") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 2) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 1) (org-mode . 1)) "load_data()" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:keyword "as") . 1) (python-mode . 1) (nil . 1)) "GlobalAveragePooling2D" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "def") . 1)) "base_model" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2) ((:keyword "def") . 1) (python-mode . 2) (nil . 4) ((:keyword "if") . 1) (inferior-python-mode . 2)) "GaussianDropout" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "def") . 1)) "temp_out" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "raw_data.index" ((inferior-python-mode . 1) (nil . 1)) "np.unique" ((inferior-python-mode . 1) (nil . 1)) "Model" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "get_model(base_model)" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "output" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:symbol "temp_out") . 1) ((:keyword "def") . 1) (python-mode . 1) (nil . 1)) "image" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:symbol "preprocessing") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "preprocess_input(args, kwargs)" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 5) ((:keyword "import") . 1) (python-mode . 5) (nil . 5) ((:symbol "preprocessing_function") . 2) ((:keyword "as") . 4)) "ImageDataGenerator" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2) ((:keyword "import") . 1) (python-mode . 2) (nil . 2) ((:keyword "as") . 1)) "model" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "fit(x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, max_queue_size, workers, use_multiprocessing, kwargs)" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:symbol "model") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "optimizers" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:symbol "keras") . 1) ((:keyword "from") . 1) (python-mode . 1) (nil . 1)) "Adamax" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:keyword "import") . 1) (python-mode . 1) (nil . 1)) "model.layers" ((inferior-python-mode . 1) (nil . 1)) "batchnormalization" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "keras.optimizers" (((:keyword "from") . 1) (inferior-python-mode . 1) (nil . 1)) "validation_data=" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "to_categorical(y, num_classes, dtype)" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 4) ((:keyword "import") . 1) (python-mode . 4) (nil . 4) ((:keyword "if") . 3) ((:symbol "utils") . 1)) "keras.utils" (((:keyword "from") . 1) (inferior-python-mode . 1) (nil . 1)) "freeze_all_layers(model)" (((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1) ((:keyword "if") . 1) (python-mode . 1) (nil . 1)) "y_test" ((inferior-python-mode . 1) (nil . 1)) "train_flow.next" ((inferior-python-mode . 1) (nil . 1)) "x_train" ((inferior-python-mode . 1) (nil . 1)) "ivy-switch-view" ((emacs-lisp-mode . 1) (nil . 1)) "automate" (((:file "/home/alkhaldieid/.emacs.d/README.org") . 1) (org-mode . 1) (nil . 1)) "use-package" ((emacs-lisp-mode . 2) (nil . 2)) ":ensure" (((:keyword "use-package") . 3) (emacs-lisp-mode . 3) (nil . 3)) ":config" (((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "git-gutter+" (((:keyword "unless") . 2) (emacs-lisp-mode . 2) (nil . 2)) "voteclassifier" ((git-gutter+-commit-mode . 1) (nil . 1)) "accuracy" ((git-gutter+-commit-mode . 1) (nil . 1)) "package" (((:file "/home/alkhaldieid/.emacs.d/README.org") . 1) (org-mode . 1) (nil . 1)) ":init" (((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "global-git-gutter-mode" (((:keyword "use-package") . 1) (emacs-lisp-mode . 1) (nil . 1)) "insert" (((:file "/home/alkhaldieid/repos/csa/code/code.org") . 1) (org-mode . 1) (nil . 1)) "can't" (((:file "/home/alkhaldieid/repos/csa/code/code.org") . 1) (org-mode . 1) (nil . 1)) "gutter" (((:file "/home/alkhaldieid/repos/csa/code/code.org") . 1) (org-mode . 1) (nil . 1)))) company-statistics--log [("use-package" (nil . 1) (emacs-lisp-mode . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1)) ("package" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/.emacs.d/README.org") . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1)) (":init" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1)) ("global-git-gutter-mode" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1)) ("insert" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/repos/csa/code/code.org") . 1)) ("can't" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/repos/csa/code/code.org") . 1)) ("gutter" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/repos/csa/code/code.org") . 1)) nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil nil ("import" (nil . 1) (python-mode . 1) ((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1)) ("print(values, sep, end, file, flush)" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1)) ("path" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:symbol "os") . 1) ((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1)) ("sklearn" (nil . 3) (python-mode . 3) ((:keyword "from") . 3) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 3)) ("datasets" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "sklearn") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1)) ("sklearn" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1)) ("preprocessing" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "sklearn") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 2) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 2)) ("normalize(X, norm, axis, copy, return_norm)" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1)) ("sklearn" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1)) ("utils" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "sklearn") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1)) ("shuffle(arrays, random_state, n_samples)" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1)) ("print(values, sep, end, file, flush)" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras_ensemble_breast.py") . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/load_digit_keras_ensemble.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/load_digit_keras_ensemble.py") . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/load_digit_keras_ensemble.py") . 1)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/load_digit_keras_ensemble.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 5)) ("print(values, sep, end, file, flush)" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "import") . 2) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 2)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 3)) ("from" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 2) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("models" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "keras") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("Sequential" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 2)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("layers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "keras") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("Dense" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 2)) ("GaussianNoise" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("return" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("Sequential" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("add(layer)" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "model") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("Dense" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("EnsembleVoteClassifier" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("clf1" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("import" (nil . 1) (inferior-python-mode . 3)) ("os.path" (nil . 2) (inferior-python-mode . 2) ((:keyword "import") . 2)) ("import" (nil . 1) (inferior-python-mode . 1) ((:keyword "import") . 1)) ("mlxtend" (nil . 1) (inferior-python-mode . 1) ((:keyword "from") . 1)) ("import" (nil . 1) (inferior-python-mode . 1) ((:keyword "from") . 1)) ("os.path" (nil . 1) (inferior-python-mode . 1) ((:keyword "import") . 1)) ("os.path" (nil . 1) (inferior-python-mode . 1) ((:keyword "import") . 1)) ("os.path" (nil . 1) (inferior-python-mode . 1) ((:keyword "import") . 1)) ("import" (nil . 1) (inferior-python-mode . 1)) ("os.path" (nil . 1) (inferior-python-mode . 1) ((:keyword "import") . 1)) ("class" (nil . 1) (python-mode . 1) ((:keyword "return") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("EnsembleVoteClassifier" (nil . 1) (python-mode . 1) ((:keyword "class") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("my_ens" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("numpy" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("X_train" (nil . 2) (inferior-python-mode . 2) ((:keyword "import") . 2)) ("X_train.shape" (nil . 2) (inferior-python-mode . 2) ((:keyword "import") . 2)) ("print(values, sep, end, file, flush)" (nil . 1) (python-mode . 1) ((:keyword "self") . 3) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("break" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("X_train" (nil . 1) (inferior-python-mode . 1) ((:keyword "import") . 1)) ("X_train.shape" (nil . 1) (inferior-python-mode . 1) ((:keyword "import") . 1)) ("X_test" (nil . 1) (inferior-python-mode . 1) ((:keyword "import") . 1)) ("print(values, sep, end, file, flush)" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("predictions" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("clf1" (nil . 1) (python-mode . 1) ((:keyword "self") . 2) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("clf1" (nil . 1) (inferior-python-mode . 2) ((:keyword "import") . 2)) ("clf1" (nil . 1) (inferior-python-mode . 1) ((:keyword "import") . 1)) ("clf1" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("print(values, sep, end, file, flush)" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("self" (nil . 1) (python-mode . 1) ((:keyword "self") . 1) ((:file "/home/alkhaldieid/repos/csa/code/digits_keras_ensemble.py") . 1)) ("emacs" (nil . 1) (shell-mode . 1)) ("comment" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/.emacs.d/README.org") . 1)) ("modus-vivendi" (nil . 1) (emacs-lisp-mode . 1)) ("~/repos/" (nil . 2) (sh-mode . 1) ((:keyword "sh") . 1) ((:file "/data/home/alkhaldieid/repos/shared/.config/shell/aliasrc") . 1)) ("~/repos/csa/" (nil . 2) (sh-mode . 1) ((:keyword "sh") . 1) ((:file "/data/home/alkhaldieid/repos/shared/.config/shell/aliasrc") . 1)) ("import" (nil . 1) (python-mode . 1) ((:file "/home/alkhaldieid/repos/csa/code/idc_torch_ensemble.py") . 1)) ("print(values, sep, end, file, flush)" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/idc_torch_ensemble.py") . 1)) ("path" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:symbol "os") . 1) ((:file "/home/alkhaldieid/repos/csa/code/idc_torch_ensemble.py") . 1)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1)) ("wrappers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "keras") . 1) ((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1)) ("scikit_learn" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "wrappers") . 1) ((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1)) ("KerasClassifier" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/breast_keras_ensemble.py") . 1)) ("defun" (nil . 1) (lisp-interaction-mode . 1)) ("interactive" (nil . 1) (lisp-interaction-mode . 1) ((:keyword "defun") . 1)) ("~/repos/csa/code/" (nil . 2) (sh-mode . 1) ((:keyword "sh") . 1) ((:file "/data/home/alkhaldieid/repos/shared/.config/shell/aliasrc") . 1)) ("import" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 1)) ("import" (nil . 1) (python-mode . 1)) ("~/repos/" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 1)) ("~/repos/csa/" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 1)) ("~/repos/csa/code/" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 1)) ("ensemble" (nil . 2) (org-mode . 2) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 2)) ("ensemble" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 1)) ("bookmark" (nil . 1) (emacs-lisp-mode . 1)) ("bookmark-jump" (nil . 1) (emacs-lisp-mode . 1)) ("votingclassifier" (nil . 2) (org-mode . 2) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 2)) ("votingclassifier" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 1)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 8)) ("datasets" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "keras") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 11)) ("mnist" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "datasets") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("load_data(path)" (nil . 2) (python-mode . 2) ((:keyword "import") . 2) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2)) ("load_data(path)" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("raw_data" (nil . 8) (python-mode . 2) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2)) ("import" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("numpy" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("import" (nil . 1) (snippet-mode . 1)) ("input(prompt)" (nil . 5) (python-mode . 5) ((:keyword "as") . 4) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 5)) ("input(prompt)" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("input(prompt)" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:symbol "nil") . 2) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("input(prompt)" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:symbol "nil") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("raw_data" (nil . 1) (inferior-python-mode . 6)) ("raw_data" (nil . 1) (inferior-python-mode . 1)) ("raw_data" (nil . 1) (inferior-python-mode . 1)) ("raw_data.count" (nil . 1) (inferior-python-mode . 1)) ("raw_data" (nil . 1) (inferior-python-mode . 1)) ("raw_data" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("return" (nil . 1) (python-mode . 1) ((:keyword "assert") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 3)) ("assert" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("assert_data()" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 4)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("applications" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "keras") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("resnet" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "applications") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("ResNet50(args, kwargs)" (nil . 3) (python-mode . 3) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 3)) ("ResNet50(args, kwargs)" (nil . 1) (python-mode . 1) ((:keyword "if") . 2) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("ResNet50(args, kwargs)" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("input(prompt)" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("x_train.shape" (nil . 1) (inferior-python-mode . 1)) ("cifar10" (nil . 2) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "datasets") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("load_data()" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("raw_data" (nil . 1) (inferior-python-mode . 1)) ("return" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("cifar10" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/repos/csa/paper/code.org") . 1)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("layers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "keras") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("GlobalAveragePooling2D" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2)) ("GlobalAveragePooling2D" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("base_model" (nil . 4) (python-mode . 2) ((:keyword "def") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2)) ("GaussianDropout" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2)) ("GaussianDropout" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("temp_out" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("raw_data" (nil . 1) (inferior-python-mode . 1)) ("raw_data.index" (nil . 1) (inferior-python-mode . 1)) ("np.unique" (nil . 1) (inferior-python-mode . 1)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("models" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "keras") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("Model" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("get_model(base_model)" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("base_model" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("output" (nil . 1) (python-mode . 1) ((:keyword "def") . 1) ((:symbol "temp_out") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("base_model" (nil . 1) (inferior-python-mode . 2)) ("base_model" (nil . 1) (inferior-python-mode . 1)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("preprocessing" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "keras") . 2) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2)) ("image" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "preprocessing") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("preprocess_input(args, kwargs)" (nil . 5) (python-mode . 5) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 5)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("preprocessing" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "keras") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("ImageDataGenerator" (nil . 2) (python-mode . 2) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2)) ("preprocess_input(args, kwargs)" (nil . 1) (python-mode . 1) ((:keyword "as") . 4) ((:symbol "preprocessing_function") . 2) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("ImageDataGenerator" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("preprocess_input(args, kwargs)" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("preprocess_input(args, kwargs)" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("model" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("fit(x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, validation_freq, max_queue_size, workers, use_multiprocessing, kwargs)" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:symbol "model") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("optimizers" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "keras") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("Adamax" (nil . 1) (python-mode . 1) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("return" (nil . 1) (python-mode . 1) ((:keyword "not") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("model.layers" (nil . 1) (inferior-python-mode . 1)) ("batchnormalization" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("keras.optimizers" (nil . 1) (inferior-python-mode . 1) ((:keyword "from") . 1)) ("import" (nil . 1) (inferior-python-mode . 1) ((:keyword "from") . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("validation_data=" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("preprocess_input(args, kwargs)" (nil . 1) (python-mode . 1) ((:keyword "as") . 1) ((:symbol "preprocessing_function") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("utils" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:symbol "keras") . 2) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 2)) ("import" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("to_categorical(y, num_classes, dtype)" (nil . 4) (python-mode . 4) ((:keyword "import") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 4)) ("to_categorical(y, num_classes, dtype)" (nil . 1) (python-mode . 1) ((:keyword "if") . 3) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("to_categorical(y, num_classes, dtype)" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("keras" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("utils" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:symbol "keras") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("to_categorical(y, num_classes, dtype)" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:symbol "utils") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("keras" (nil . 1) (inferior-python-mode . 1) ((:keyword "from") . 1)) ("keras.utils" (nil . 1) (inferior-python-mode . 1) ((:keyword "from") . 1)) ("import" (nil . 1) (inferior-python-mode . 1) ((:keyword "from") . 1)) ("tensorflow" (nil . 1) (python-mode . 1) ((:keyword "from") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("freeze_all_layers(model)" (nil . 1) (python-mode . 1) ((:keyword "if") . 1) ((:file "/home/alkhaldieid/repos/csa/code/keras/ensemble/voting_classifier_mnist.py") . 1)) ("y_test" (nil . 1) (inferior-python-mode . 1)) ("train_flow.next" (nil . 1) (inferior-python-mode . 1)) ("x_train" (nil . 1) (inferior-python-mode . 1)) ("ivy-switch-view" (nil . 1) (emacs-lisp-mode . 1)) ("automate" (nil . 1) (org-mode . 1) ((:file "/home/alkhaldieid/.emacs.d/README.org") . 1)) ("use-package" (nil . 1) (emacs-lisp-mode . 1)) (":ensure" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1)) (":config" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "use-package") . 1)) ("git-gutter+" (nil . 2) (emacs-lisp-mode . 2) ((:keyword "unless") . 2)) ("git-gutter+" (nil . 1) (emacs-lisp-mode . 1) ((:keyword "unless") . 1)) ("voteclassifier" (nil . 1) (git-gutter+-commit-mode . 1)) ("accuracy" (nil . 1) (git-gutter+-commit-mode . 1))] company-statistics--index 9)